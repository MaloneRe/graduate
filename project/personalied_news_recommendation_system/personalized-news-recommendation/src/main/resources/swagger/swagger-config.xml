<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd">
                        
    
    
    <!-- swwager配置 -->
    <!--将静态资源交由默认的servlet处理-->
    <!-- <mvc:default-servlet-handler /> -->
	<!--向容器自动注入配置 -->
	<context:annotation-config />
	<!--重要！将你的SwaggerConfig配置类注入 -->
	<bean class="com.personalizednewsrecommendation.swagger.config.SwaggerConfig" />
	<!--重要！配置swagger资源不被拦截 -->
	<!-- 下面的是默认配置不用其他操作的 -->
	<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />
	<!-- 这里是要创建swagger目录并且把swagger-ui中dist内容拷贝到swagger目录中 -->
	<!-- 修改index.html中的 http://petstore.swagger.wordnik.com/v2/swagger.json修改为自己项目路径+api-docs,例如：
          http://localhost:8080/SSMSwagger/api-docs：SSMSwagger为项目名称。
     -->
	<!-- 静态资源文件，不会被Spring MVC拦截 -->  
    <!-- <mvc:resources mapping="/swagger/**" location="/swagger/" /> -->
	<!-- 将 springSwaggerConfig加载到spring容器 -->  
    <!-- <bean class="com.mangofactory.swagger.configuration.SpringSwaggerConfig" />   -->
    <!-- 将自定义的swagger配置类加载到spring容器 -->  
    <!-- <bean class="com.yrok.swagger.SwaggerConfig" />   -->
    
</beans>