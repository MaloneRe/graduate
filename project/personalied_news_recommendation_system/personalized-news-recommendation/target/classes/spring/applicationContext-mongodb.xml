<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/data/mongo   
        				http://www.springframework.org/schema/data/mongo/spring-mongo.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

	<mongo:mongo-client id="mongo" host="localhost"
		port="27017">
		
		<!-- 
			connections-per-host: 每个主机答应的连接数（每个主机的连接池大小）， 
			当连接池被用光时，会被阻塞住 max-wait-time: 
			被阻塞线程从连接池获取连接的最长等待时间（ms） connect-timeout: 在建立 
			（打开）套接字连接时的超时时间（ms） socket-timeout:套接字超时时间; 
			该值会被传递给Socket.setSoTimeout(int) slave-ok:指明是否答应驱动从次要节点或者奴隶节点读取数据  
		-->
		
		<mongo:client-options 
		    write-concern="SAFE"
		    connections-per-host="${db.mongo.connectionsPerHost}"
			threads-allowed-to-block-for-connection-multiplier="${db.mongo.threadsAllowedToBlockForConnectionMultiplier}"
			connect-timeout="${db.mongo.connectTimeout}" 
			max-wait-time="${db.mongo.maxWaitTime}"
			socket-timeout="${db.mongo.socketTimeout}"
			min-connections-per-host="${db.mongo.minConnectionsPerHost}"
			socket-keep-alive="${db.mongo.socketKeepAlive}" 
			max-connection-idle-time="${db.mongo.maxConnectionIdleTime}"
			max-connection-life-time="${db.mongo.maxConnectionLifeTime}"
			heartbeat-socket-timeout="${db.mongo.heartbeatSocketTimeout}"
			heartbeat-connect-timeout="${db.mongo.heartbeatConnectTimeout}"
			heartbeat-frequency="${db.mongo.heartbeatFrequency}"
			min-heartbeat-frequency="${db.mongo.minHeartbeatFrequency}"/> 
	</mongo:mongo-client>
	<!-- <mongo:mongo-client id="mongo"  host="localhost" port="27017">
		<mongo:client-options 
		    connections-per-host="3"
			threads-allowed-to-block-for-connection-multiplier="2"
			connect-timeout="1000" 
			max-wait-time="1500"
			auto-connect-retry="true" 
			socket-keep-alive="true"
			socket-timeout="1500" 
			slave-ok="true"
			write-number="1" 
			write-timeout="0" 
			write-fsync="true" />
	</mongo:mongo-client> -->
	<!-- 设置使用的数据库 名 -->
	<mongo:db-factory id="mongoDbFactory" dbname="${db.mongo.dbname}"
		mongo-ref="mongo" />

	<!-- mongodb的模板 write-concern="NORMAL" -->
	<mongo:template id="mongoTemplate" db-factory-ref="mongoDbFactory" />
	<!-- mongo模板操作对象 -->
	<!-- <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate"> 
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" /> 配置读写分离的模式 
		<property name="readPreference" ref="secondaryPreferredReadPreference"/> 
		</bean> -->
	<!-- MongoDB GridFS Template 支持，操作mongodb存放的文件 -->
	<!-- 
	<mongo:mapping-converter id="converter" db-factory-ref="mongoDbFactory" 
		base-package="com.xueyou.impl"/> 
	<mongo:gridFsTemplate id="gridFsTemplcate" 
		db-factory-ref="mongoDbFactory" converter-ref="converter" /> 
	-->

</beans>